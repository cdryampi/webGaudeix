# Generated by Django 4.2.1 on 2023-05-18 07:18

from django.db import migrations, models
import django.db.models.deletion
from django.db.models import Count


def clean_subblog_images(apps, schema_editor):
    SubBlogImagen = apps.get_model('blog', 'SubBlogImagen')

    # Iterar sobre todos los objetos SubBlogImagen
    for subblog_imagen in SubBlogImagen.objects.all():
        subblog = subblog_imagen.subblog

        # Obtener todas las imágenes asociadas al objeto SubBlog
        imagenes = subblog_imagen.imagen_set.all()

        # Identificar la imagen que deseas mantener según tu criterio
        imagen_a_mantener = imagenes.first()

        # Eliminar todas las demás imágenes asociadas al objeto SubBlog
        for imagen in imagenes:
            if imagen != imagen_a_mantener:
                imagen.delete()

    # Actualizar el campo subblog en el modelo SubBlogImagen a OneToOneField
    SubBlogImagen.objects.update(subblog_id=models.F('subblog'))
def clean_duplicate_subblog_images(apps, schema_editor):
    SubBlogImagen = apps.get_model('blog', 'SubBlogImagen')

    # Obtener los IDs de los SubBlog con más de una SubBlogImagen asociada
    duplicate_subblog_ids = SubBlogImagen.objects.values('subblog_id').annotate(count=Count('subblog_id')).filter(count__gt=1)

    # Eliminar las SubBlogImagen duplicadas para cada SubBlog
    for duplicate_subblog in duplicate_subblog_ids:
        subblog_id = duplicate_subblog['subblog_id']
        SubBlogImagen.objects.filter(subblog_id=subblog_id).exclude(id=duplicate_subblog['subblog_id']).delete()


class Migration(migrations.Migration):

    dependencies = [
        ('blog', '0016_alter_subblogimagen_imagen'),
    ]

    operations = [
        migrations.AlterField(
            model_name='subblogimagen',
            name='subblog',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='blog.subblog'),
        ),
        migrations.RunPython(clean_subblog_images),
    ]
